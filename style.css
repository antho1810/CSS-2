h* {
  font-size: 20px;
  font-weight: 100;
  font-family: serif;
  padding: 0px;
  margin: 0px;
}
/*
.Rey {
  color: rgba(7, 213, 245, 0.623);
}

h2 {
  color: blue;
}

button {
  color: yellow;
}

#Go {
  background-color: black;
}

[veloz="sii"] {
  color: green;
}

h1 p {
  background-color: violet;
}

h3 b {
  background-color: steelblue;
}

h3 b span {
  color: turquoise;
}
h3 b:hover {
  color: turquoise;
}

button:hover {
  color: aqua;
}

/* Selector universal --> * */
/* Selector por etiqueta --> h1 */
/* Selector por clase --> .Rey */
/* Selector por ID: tiene que ser unico el ID y utilizarlo uno por etiqueta --> #Go  */
/* Selector por atributo --> <h1 veloz="sii"></h1> => [veloz="sii"] */
/* Selector por descendiente --> <h1><p></p></h1> => h1 p */
/* Selecotr por pseudo-clases */

/* #Go {
  color: yellow;
}

button {
  color: red !important;
} */
/* utilizar !important cuando sea la etiqueta 
sea unica o no se valla a cambiar en un futuro */

/* Especificidad de mayor a menor por jeraquia
 -------> !important
 ------> estilos en linea
 -----> Idenficadores - ID
 ----> Clases
 ----> Pseudo-clases
 ----> Atributos
 ---> Elementos
 ---> Pseudo-elementos */
/* Por el nivel de jerarquia se mueve en cascada */

/* Metodologia BEM */
/* .contact-form_input:first-child{
    color: red;
}

.contact-form_input--active{
    color: blue;
}


/* Unidades */
/* .contact-form{
font-size: 22px;
background-color: black;
width: 50vw;
height: 50vh;
} */

/* .contact-form__h2{
    font-size: 2em;
} */
/* REM : tiene como referencia el root 
y tambien se usa bastante*/
/* em - 16px
 */

/* Propiedades de texto */
/* .contact-form{
    font-family: 'Times New Roman', cursive;
    line-height: 1;
    font-weight: 100;
    /* font-stretch: normal; 
    font-variant: small-caps;
 }  */

/* Teoria de cajas */
/* h2{
    display: inline;
    height: 400px;
    width: 100px;
}

p{
    height: 400px;
    width: 100px;
} */

/* h2{
    background-color: red;
    display: inline-block;
    padding: 20px 30px ;
    box-sizing: content-box;
    text-align: center;
    margin: 10px;
    border-radius: 10px;
    border: 4px solid black;
    box-shadow: 2px 4px 15px 0 black;fd
    text-shadow: 2px 2px 7px white;
    transform: rotate(-45deg);
} */

/* .caja-1, .caja-2{
  width: 200px;
  height: 200px;
  margin: auto;
} */
div {
  width: 100px;
  height: 100px;
  display: block;
  background: green;
  text-align: center;
  position: absolute;
}

/* outline sirve para seÃ±alar el objeto pero no lo reduce */

/* .caja-4{
  outline: 5px solid red;
} */
/* .caja-1{
  background: blue;
  outline: 7px solid red;
  box-sizing: content-box;

}
.caja-2{
  background: yellow;

} */
/* padding: arriba, derecha, abajo, izquierda */
.contenedor {
  position: relative;
  border: 4px solid red;
  margin: 50px auto;
  height: 450px;
  width: 450px;
}
.caja-1 {
  background-color: red;
  /* outline: 5px solid blue; */
  
}
.caja-2 {
  background-color: red;
  right: 0;
}
.caja-3 {
  background-color: red;
bottom: 0;
  
}
.caja-4 {
  background-color: red;
  right: 0;
  bottom: 0;
}
.caja-5{
  background-color: red;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  /* margin: 170px; */
}
.caja-6{
  margin: 170px 225px 175px 0px;
  background: red;
}
/* .caja-3 {
  background: turquoise;
  position: relative;
  top: 60px;
  left: 20px;
  z-index: 2;
} */
/* Position
--> Relative: adquiere los atributos de top y left como prioridad que bottom y right, 
si top y left no estan el relative le hara caso los otros 2.
En un contenedor de padre e hijo el hijo el no tiene position relative se pondre encima del padre.
--> */

/* .caja-4 {
  background: indianred;
  position: relative;
  z-index: 4;
} */

/* Z-index: se pone encima de otro objeto depende el valor que uno le de. 
por ejemplo: <h2 style="z-index=2"></h2><h1 style="z-index=0"></h1> */

/* El z-index en un contenedor con hijo, para contener el padre por encima del hijo
necesita poner en el hijo, un z-index inferior a cero o un numero un negativo*/

/* .contenedor{
  width: 300px;
  height: 300px;
  background-color: aqua;
  margin: 40px;
  position: relative;
}

.hijo{
  background-color: orange;
  width: 120px;
  height: 120px;

  top: -20px;
  left: -20px;
  z-index: -1;
} */
