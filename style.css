* {
  font-size: 40px;
  font-weight: 100;
  font-family: serif;
  padding: 0px;
  margin: 0px;
}

.lang b:lang(en){
background: red;
padding: 20px;
}

/* .focus{
  width: 400px;
  height: 100px;
background: gray;
  margin: 25px;
  transition: all 1s;
}

.caja:active{
  background: yellow;

}
.focus::placeholder{
  color: black;
}*/

/* :focus sirve para los input, y con un background y color queda espectacular */
/* .focus:focus{
  background: white;
  padding: 20px;
} */
/* .caja1 {
  height: 200px;
  width: 200px;
  color: green !important;
  /* color: black; 
  /* transition: backgroud 1s, height .1s, width 1s, border .5s; 
  transition: all 1s;
  /* border: 6px solid yellow; 
}

.caja1:hover {
  height: 400px;
  width: 400px;
  /* border: 8px solid blue; 
}

.caja1:link {
  color: blue;
}

.caja1:visited{
  color:violet
}

.caja1:active{

}  */
/* transition nos ayuda a poner o quitar velocidad cuando utilizamos el :hover */

/* .texto{
  padding: 20px;
}

.texto::first-line{
  color: green;
  font-size: 2em;
}

.texto::first-letter{
  font-size: 3em;
  font-weight: 900;
}

form{
  margin: 100px auto;
  display: block;
  background-color: #555;
  padding: 20px;
  width: 50%;
  text-align: center;

}

input{
  width: 100%;
  padding: 6px;
}

input::placeholder{
  color: red;
  font-size: 20px;
}

.texto::selection{
  background-color: blue;
  color: white;
}

b{
  margin: 50px auto;
  padding: 20px;
}

b::before{
  content: "Me suscrbí ";
  color: blue;
}

b::after{
  content: " todo tendencias";
  color: red;
  background: black;
} */

/* .cont{
  float: left;

}

.cont div{
  float: right;
  padding: 40px;
  
}

.primario{
  width: 30%;
  background: blue;
}

.secundario{
  width: 70%;
  background: green;

} */

/* .over{
  margin: auto;
  margin-top: 50px;
  border: 4px solid red;
  background: gray;
  width: 50%;
  padding: 20px;
}

.over img{
  float: left;
  width: 300px;
  margin-right: 18px;
} */

/* float usar en img para tener una mejor calidad */
/* opacity: le da y/o le quita opacida una etiqueta */
/* hidden es para ocultar una atributo, por ejemplo overflow-x: hidden */

/* Overflow(buffer): 
--> visible: el texto que sobresale de la caja deja que sea visible
--> auto: detecta si es necesario, el texto es largo y sobre salga de la caja, lo que hace es meterlo en la caja y ponerle un scroll
--> scroll: mete el texto en la caja y le pone un scroll*/

/* b{
  width: 150px;
  height: 150px;
  margin: 20px;
  border: 10px solid red;
  background: yellow;
  height: 400px;
  width: 300px;
  // display: block;
  display: inline-block;
} */

/* position fixed: queda en la pantalla y se mueve con el scroll. Se veria bien en un navbar */
/* position sticky: queda fijo en la pantalla y conserva su espacio. Igual queda fijo como absolute 
y conserva su posicion con relative, el texto no se pone por abajo de esta caja.
Se queda dijo al principio de la view cuando lo posicionamos hay desde el primo pero y queda como un relative, 
pero cuando lo posicionamos entre 2 texto queda fijo donde lo ubicamos pero cuando hacemos scroll y bajamos hasta 
el final conmienza a trabajar como si tuviera una posicion fixed */
/* .caja-fixed{
  background: red;
  position: sticky;
  opacity: .3;
  top: -20px;

} */
/*
.Rey {
  color: rgba(7, 213, 245, 0.623);
}

h2 {
  color: blue;
}

button {
  color: yellow;
}

#Go {
  background-color: black;
}

[veloz="sii"] {
  color: green;
}

h1 p {
  background-color: violet;
}

h3 b {
  background-color: steelblue;
}

h3 b span {
  color: turquoise;
}
h3 b:hover {
  color: turquoise;
}

button:hover {
  color: aqua;
}

/* Selector universal --> * */
/* Selector por etiqueta --> h1 */
/* Selector por clase --> .Rey */
/* Selector por ID: tiene que ser unico el ID y utilizarlo uno por etiqueta --> #Go  */
/* Selector por atributo --> <h1 veloz="sii"></h1> => [veloz="sii"] */
/* Selector por descendiente --> <h1><p></p></h1> => h1 p */
/* Selecotr por pseudo-clases */

/* #Go {
  color: yellow;
}

button {
  color: red !important;
} */
/* utilizar !important cuando sea la etiqueta 
sea unica o no se valla a cambiar en un futuro */

/* Especificidad de mayor a menor por jeraquia
 -------> !important
 ------> estilos en linea
 -----> Idenficadores - ID
 ----> Clases
 ----> Pseudo-clases
 ----> Atributos
 ---> Elementos
 ---> Pseudo-elementos */
/* Por el nivel de jerarquia se mueve en cascada */

/* Metodologia BEM */
/* .contact-form_input:first-child{
    color: red;
}

.contact-form_input--active{
    color: blue;
}


/* Unidades */
/* .contact-form{
font-size: 22px;
background-color: black;
width: 50vw;
height: 50vh;
} */

/* .contact-form__h2{
    font-size: 2em;
} */
/* REM : tiene como referencia el root 
y tambien se usa bastante*/
/* em - 16px
 */

/* Propiedades de texto */
/* .contact-form{
    font-family: 'Times New Roman', cursive;
    line-height: 1;
    font-weight: 100;
    /* font-stretch: normal; 
    font-variant: small-caps;
 }  */

/* Teoria de cajas */
/* h2{
    display: inline;
    height: 400px;
    width: 100px;
}

p{
    height: 400px;
    width: 100px;
} */

/* h2{
    background-color: red;
    display: inline-block;
    padding: 20px 30px ;
    box-sizing: content-box;
    text-align: center;
    margin: 10px;
    border-radius: 10px;
    border: 4px solid black;
    box-shadow: 2px 4px 15px 0 black;fd
    text-shadow: 2px 2px 7px white;
    transform: rotate(-45deg);
} */

/* .caja-1, .caja-2{
  width: 200px;
  height: 200px;
  margin: auto;
} */
/* div {
  width: 100px;
  height: 100px;
  display: block;
  background: green;
  text-align: center;
  position: absolute;
} */

/* outline sirve para señalar el objeto pero no lo reduce */

/* .caja-4{
  outline: 5px solid red;
} */
/* .caja-1{
  background: blue;
  outline: 7px solid red;
  box-sizing: content-box;

}
.caja-2{
  background: yellow;

} */
/* padding: arriba, derecha, abajo, izquierda */
/* .contenedor {
  position: relative;
  border: 4px solid red;
  margin: 50px auto;
  height: 450px;
  width: 450px;
}
.caja-1 {
  background-color: red;
  /* outline: 5px solid blue; */

/* }
.caja-2 {
  background-color: red;
  right: 0;
}
.caja-3 {
  background-color: red;
bottom: 0;
  
}
.caja-4 {
  background-color: red;
  right: 0;
  bottom: 0;
}
.caja-5{
  background-color: red;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  /* margin: 170px; */
/* }
.caja-6{
  margin: 170px 225px 175px 0px;
  background: red;
} */
/* .caja-3 {
  background: turquoise;
  position: relative;
  top: 60px;
  left: 20px;
  z-index: 2;
} */
/* Position
--> Relative: adquiere los atributos de top y left como prioridad que bottom y right, 
si top y left no estan el relative le hara caso los otros 2.
En un contenedor de padre e hijo el hijo el no tiene position relative se pondre encima del padre.
--> */

/* .caja-4 {
  background: indianred;
  position: relative;
  z-index: 4;
} */

/* Z-index: se pone encima de otro objeto depende el valor que uno le de. 
por ejemplo: <h2 style="z-index=2"></h2><h1 style="z-index=0"></h1> */

/* El z-index en un contenedor con hijo, para contener el padre por encima del hijo
necesita poner en el hijo, un z-index inferior a cero o un numero un negativo*/

/* .contenedor{
  width: 300px;
  height: 300px;
  background-color: aqua;
  margin: 40px;
  position: relative;
}

.hijo{
  background-color: orange;
  width: 120px;
  height: 120px;

  top: -20px;
  left: -20px;
  z-index: -1;
} */

/* Display:
--> Block: se le puede poner en altura y ancho
--> Inline: se puede utilizar para texto, no hace 
caso a las mededias. la etiqueda b tiene por defecto el display inline
--> Inline-block: se pone en linea y 
se le puede poner altura y ancho
--> Flex
--> G4rid
--> Inline-flex
--> Inline-grid*/

/* Pseudo-Elementos

::first-line solo sirve para los display block
::first-letter: solo sirve para los display block
::placeholder
::after se utiliza para los diferentes display
::before se utiliza para los diferentes display
/* ::selection*/

/* Pseudo-Clases
:hover
:link
:visited
:active
:focus
:lang
*/
