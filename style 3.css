* {
  font-weight: 100;
  font-family: serif;
  font-size: 20px;
}
.container{
  filter: contrast(20);
  background-color: #fff;
}

.caja{
  display: inline-block;
  width: 150px;
  height: 150px;
  background: red;
  margin: 40px;
  border-radius: 50%;
  filter: blur(20px);
}

.caja:first-child{
  animation: trasladat 1.6s alternate infinite
}




@keyframes trasladat{
  0% {
    transform: translate(0);
  }
  100% {
    transform: translate(160px);
  }
}
/* div{
  filter: drop-shadow(0px 5px 10px #000);
} */

/* Filter
none
blur(px)
brightness(0-1)
contrast(number or %)
drop-shadow(medidas)
grayscale(%)
hue-rotate(deg)
invert(%)
opacity(%)
saturate(%)
sepia(%)
url("filters.svg#filter.id");
 */

/* 
:root{
  --color-rojo: red;
  --color-blue: blue;
}
 
div{
  padding: 30px;
  height: 200px;
  width: 150px;
  margin: 30px;
}
p{
  --color-blue: #000;
  color: aliceblue;
  height: 100px;
  width: 100px;
  margin: 30px;
  background: var(--color-blue);

}

.container{
  background: var(--color-rojo);
}

.caja2{
  background: var(--color-blue);
} */

/* body {
  background-size: cover;
  background-image: 
  url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ1GXzdx1el5E_SeYYJm-VNYpXCc2g2tv5U5A&usqp=CAU)
}
.caja {
  /* background: #025; *
  background-clip: border-box;
  background-repeat: no-repeat;
  background-image: 
  url(https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTOFNaY69u0ZHd4eDGDS52Gick8bs5vdZavPOiUCzONUg&s);
  background-size: contain;
  padding: 20px 5px;
  background-origin: border-box;
  border: 10px solid transparent;
  background-position: center;
  height: 400px;
  width: 500px;
  margin: 20px;
  color: white;
  transition: transform 1s;
  display: flex;
  transform: translate(50px);
}

b {
  margin: auto;
  transform: skew(-30deg);
  clip-path: polygon(50%, 100%, 25%);
}

.caja:hover {
  transform: scaley(1);
}
.container {
  background: slateblue;
  padding: 20px 5px;
} */

/* .caja {
  background: yellow;
  height: 100px;
  width: 100px;
  height: 100px;
  width: 100px;
  position: relative;
  transition-property: background;
  transition-duration: .1s;
  /* transition-delay: 5s; *
  transition-timing-function: ease-in-out;
  animation: desplazar 1s;
  animation-iteration-count: 1;
  animation-direction: alternate-reverse;
  animation-fill-mode: both;
  animation-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.275);
} */
/* .caja:hover {
  background: lightgreen;
} */
/* 
@keyframes desplazar {
  0% {
    background: #025;
    left: 0;
  }
  50 {
    background:red
  }
  100% {
    left: 80%;
    background: green
  }
} */

/* Animaciones
animation-name: name
animation-duration: duration
animation-delay: delay
animation-timing-function: (transition values)
animation-iteration-count: number
animation-fill-mode: none formwards backwards both initial innerit
animation-direction: normal reverse alternate alternate-reverse */

/* body {
  background: radial-gradient(circle, #fff, #bbb);
  /* padding: 25px; *
} */

/* .content{
  display: flex;
  flex-direction: column;
}
.div-responsive{
background: rgb(106, 166, 225);
}

.header, .main, .aside, .footer{
  padding: 20px;
}

.header{
  background: lightcoral;
  flex-basis: 60px;
}
.main{
  background: darkmagenta;
  flex-basis: 300px;
  flex-grow: 2;
  flex-shrink: 0;
}
.aside{
  background: darkgreen;
  flex-basis: 200px;
  flex-grow: 1;
  flex-shrink: 0;
}
.footer{
  background: darkorange;
  flex-grow: 1;
  flex-shrink: 0;
} */

/* Transition
transition-property: property/ies - all - none
transition-duration: duration/s
transition-delay: delay/s
transition-timing-function: linear - ease - ease-in - ease-out ease-in-out -step-start - step-*/

/* @media screen and (min-width: 650px) and (max-width: 800px){
  .div-responsive{
    background: black;
    color: white;
  }
} */
/* @media screen and (min-width: 700px) {
  .content {
    flex-direction: row;
    flex-wrap: wrap;
  }
  .aside,
  .main {
    height: 530px;
  }
  .main {
    flex-grow: 4;
  }
  .aside {
    flex-grow: 1;
  }
  .header {
    flex-basis: 100%;
    max-height: 60px;
  }
  .footer {
    flex-basis: 100%;
  }
} */
/* @media screen and (min-width: 700px) {
  .content{
  display: grid;
  grid-template-rows: 80px  1fr 1fr 1fr 1fr 1fr 80px));
  grid-template-columns: repeat(3,1fr);
  }
  .aside, .main{

  }
  .main{
    grid-row: 2/6;
    grid-column: 1 / span 2;

  }
  .aside{
    grid-row: 2/6;
 
  }
  .header{
grid-column: 1 /span 3;
  }
  .footer{
grid-row: 6/7;
grid-column: 1 / span 3;
  }
} */

/* @media screen and (min-width: 800px) and (max-width: 1150px){
  .div-responsive{
    background: orange;
  }
} */

/* @media screen and (min-width: 1150px) and (max-width: 1400px){
  .div-responsive{
    background: rgb(229, 3, 161);
  }
} */

/* @media screen and (min-width: 400px) and (max-width: 650px){
  .div-responsive{
    background: red;
  }
} */

/* @media screen and (min-width: 400px) and (max-width: 650px){
  .div-responsive{
    background: red;
  }
} */

/* Resposive Design
Estructas flexibles (contanedores flexibles, imagenes y video flexibles)
Media Queries

@meedia se usa en cosula de medios para aplicar diferentes estilos para 
diferentes tipos / dispositivos de medios.

- Ancho y alto de la ventana grafica
- Ancho y alto del dispositivo
- Orientacion (Â¿la tableta / telefono esta en modo horizontal o vertical?)
- Resolucion

all: apto para todos los dispositvos
print: DEstinado a material impreso y visializacion de documentos en una pantalla en el modo de vista previa de impresion
screen: Destinado principalmente a las pantallas
specch: Destinado a sintetizadores de voz

Operadores: And / Or
orientacion: landscape y portrait
*/
